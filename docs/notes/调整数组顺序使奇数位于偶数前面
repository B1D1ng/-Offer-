# 题目
>输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。
## 方法1：建立一个新的同样大小的数组，前半部分按顺序存储奇数，遇到偶数时从数组尾部开始存储，构成一个前半部分奇数顺序存储，后半部分偶数逆序存储，最后再重新赋值给原数组即可。
```
public class Solution {
    public void reOrderArray(int [] array) {
        int[] arraycopy = new int[array.length];
        int front = 0;
        int rear = array.length-1;
        for(int i = 0;i < array.length;i++){
            if(array[i]%2!=0){
                arraycopy[front] = array[i];
                front++;
            }
            else{
                arraycopy[rear] = array[i];
                rear--;
            }
        }
        rear = array.length-1;
        for(int i = 0;i<array.length;i++){
            if(i<front){
                array[i] = arraycopy[i];
            }
            else{
                array[i] = arraycopy[rear];
                rear--;
            }
        }
    }
}
```
>运行时间：13ms,占用内存：9280k,时间复杂度O(n),空间复杂度O(n)
